geom_smooth(method = "lm", se = FALSE, color = "blue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Scatter Plots of Numeric Variables vs Fertility Rate",
x = "Value",
y = "Fertility Rate") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
numeric_vars_except_fertility <- setdiff(numeric_vars, "fertility_rate")
final_data_imputed %>%
pivot_longer(cols = all_of(numeric_vars_except_fertility), names_to = "variable", values_to = "value") %>%
ggplot(aes(x = value, y = fertility_rate)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Scatter Plots of Numeric Variables vs Fertility Rate",
x = "Value",
y = "Fertility Rate") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
final_data_imputed %>%
pivot_longer(cols = all_of(numeric_vars_except_fertility), names_to = "variable", values_to = "value") %>%
ggplot(aes(x = value, y = fertility_rate)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Scatter Plots of Numeric Variables vs Fertility Rate",
x = "Value",
y = "Fertility Rate") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
model0<-lm(fertility_rate~social_insurance_participation +
urban_unemployment_rate + local_fiscal_expenditure + GDP +
national_education_funding + education_employment_rate +
CPI + HE_students_per_100000 + health_technicians_per_10000 +
maternity_insurance_participation + per_capita_disposable_income +
per_capita_residential_sales,data=final_data_imputed)
model0_step<-step(model0)
summary(model0_step)
model1<-lm(fertility_rate~province + year + social_insurance_participation +
urban_unemployment_rate + local_fiscal_expenditure + GDP +
national_education_funding + education_employment_rate +
CPI + HE_students_per_100000 + health_technicians_per_10000 +
maternity_insurance_participation + per_capita_disposable_income +
per_capita_residential_sales,data=final_data_imputed)
model1_step<-step(model1)
summary(model1_step)
ggplot(average_fertility_rate, aes(x = reorder(province, mean_fertility_rate), y = mean_fertility_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Average Fertility Rate by Province",
x = "Province",
y = "Average Fertility Rate") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
# 使用mice函数进行插补
imputed_data <- mice(final_data_wide, method = 'pmm', m = 5,printFlag = F)
final_data_imputed <- complete(imputed_data, action = 1)
# 显示插补后的数据框
kable(head(final_data_imputed),caption = "final data")
numeric_vars <- final_data_imputed %>% select(where(is.numeric)) %>% names()
#将数据转换为长格式
data_long <- final_data_imputed %>%
pivot_longer(cols = all_of(numeric_vars), names_to = "variable", values_to = "value")
#所有数值变量的直方图
ggplot(data_long, aes(x = value)) +
geom_histogram(fill = "steelblue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Histograms of All Numeric Variables",
x = "Value",
y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
numeric_vars <- final_data_imputed %>% select(where(is.numeric)) %>% names()
#将数据转换为长格式
data_long <- final_data_imputed %>%
pivot_longer(cols = all_of(numeric_vars), names_to = "variable", values_to = "value")
#所有数值变量的直方图
ggplot(data_long, aes(x = value)) +
geom_histogram(fill = "steelblue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Histograms of All Numeric Variables",
x = "Value",
y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
model0<-lm(fertility_rate~social_insurance_participation +
urban_unemployment_rate + local_fiscal_expenditure + GDP +
national_education_funding + education_employment_rate +
CPI + HE_students_per_100000 + health_technicians_per_10000 +
maternity_insurance_participation + per_capita_disposable_income +
per_capita_residential_sales,data=final_data_imputed)
model0_step<-step(model0)
summary(model0_step)
par(mfrow=c(2,2))
plot(model1_step)
plot(model1_step)
par(mfrow=c(2,2))
plot(model1_step)
vif(model1_step)
# 计算预测值
final_data_imputed <- final_data_imputed %>%
mutate(predicted_fertility_rate = predict(model1_step, newdata = final_data_imputed))
data_long <- final_data_imputed %>%
select(year, province, fertility_rate, predicted_fertility_rate) %>%
pivot_longer(cols = c(fertility_rate, predicted_fertility_rate), names_to = "type", values_to = "value")
data_long$index<-rep(c(1:(nrow(data_long)/2)),each=2)
#真实值和预测值的双折线图
ggplot(data_long, aes(x = index, y = value, color = type)) +
geom_line(alpha = 0.7) +
labs(title = "Actual vs Predicted Fertility Rates",
x = "Year",
y = "Fertility Rate",
color = "") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom")
ggplot(data_long, aes(x = index, y = value, color = type)) +
geom_line(alpha = 0.7) +
labs(title = "Actual vs Predicted Fertility Rates",
x = "Year",
y = "Fertility Rate",
color = "") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(readxl)
library(tidyverse)
library(dplyr)
library(patchwork)
library(pinyin)
library(sf)
library(tmap)
library(tmaptools)
library(gridExtra)
library(sp)
library(spdep)
library(sf)
library(spatialreg)
library(lmtest)
library(car)
# File names and English names
file_names <- c("城乡居民社会养老保险参保人数占比.xls", "城镇登记失业率.xls", "地方财政支出.xls",
"地区生产总值.xlsx", "国家财政性教育经费.xls", "教育就业人数占比.xls",
"居民消费价格指数.xls", "每10万人口高等教育在校人数.xls",
"每万人拥有卫生技术人员.xls", "年末参加生育保险人数.xls",
"人均可支配收入.xls", "人均住宅销售额.xls", "生育率.xlsx")
english_names <- c("social_insurance_participation", "urban_unemployment_rate",
"local_fiscal_expenditure", "GDP", "national_education_funding",
"education_employment_rate", "CPI", "HE_students_per_100000",
"health_technicians_per_10000", "maternity_insurance_participation",
"per_capita_disposable_income", "per_capita_residential_sales",
"fertility_rate")
data_list <- lapply(file_names, function(file) {
# Read data
data <- read_excel(file,
range = cell_rows(4:35))
# Determine column names for pivot_longer()
col_names <- colnames(data)[-1]  # Exclude the first column
# Pivot the data to long format
data_long <- pivot_longer(data, cols = all_of(col_names), names_to = "year", values_to = "value")
# Extract year from year column
data_long$year <- gsub("年", "", data_long$year)
#Convert value to numeric
data_long$value <- as.numeric(data_long$value)
# Add file name as a column
data_long$file_name <- file
# Add English name as a column
data_long$english_name <- english_names[file_names == file]
# Return the modified data
return(data_long)
})
# Removes NULL elements from the list
data_list <- data_list[!sapply(data_list, is.null)]
# Bind all data frames together
final_data <- bind_rows(data_list)
# Print the first few rows of the final data frame
final_data$Region <- NULL
final_data$file_name <- NULL
head(final_data)
# Pivot the data from long to wide format
final_data_wide <- pivot_wider(final_data, names_from = english_name, values_from = value)
# Print the first few rows of the final data frame
head(final_data_wide)
final_data_wide$province
DBDQ <- st_read("省会城市.shp")
DBDQ2 <- st_read("省级行政区.shp")
DBDQ2$name_1 <- c("Heilongjiang", "Xinjiang", "Shanxi", "Ningxia", "Tibet", "Shandong",
"Henan", "Jiangsu", "Anhui", "Hubei", "Zhejiang", "Jiangxi", "Hunan",
"Yunnan", "Guizhou", "Fujian", "Guangxi", "Guangdong", "Hainan", "Jilin",
"Liaoning", "Tianjin", "Qinghai", "Gansu", "Shaanxi", "Mongolia", "Chongqin",
"Hebei", "Shanghai", "Beijing", "Taiwan", "Xianggang", "Aomen", "Sichuan")
DBDQ$name
average_fertility_rate <- aggregate(fertility_rate ~ year, data = final_data_wide, FUN = mean)
average_capita<- aggregate(per_capita_residential_sales ~ year, data = final_data_wide, FUN = mean)
Fertility_plot <- ggplot(average_capita, aes(x = year, y = per_capita_residential_sales)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 绘制柱状图
labs(
x = "Year",
y = "Average Fertility Rate",
title = "Average Fertility Rate Over Time"
) +
theme_minimal()  # 使用最小化的主题样式
Fertility_plot <- ggplot(average_fertility_rate, aes(x = year, y = fertility_rate)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 绘制柱状图
labs(
x = "Year",
y = "Average Fertility Rate",
title = "Average Fertility Rate Over Time"
) +
theme_minimal()  # 使用最小化的主题样式
Fertility_plot
# 从 final_data_wide 中提取需要的数据（假设数据列名为 fertility_rate）
data_to_map <- final_data_wide[, c("province", "year", "fertility_rate")]
# 将地图数据（DBDQ2）转换为 sf 对象
DBDQ2_sf <- st_as_sf(DBDQ2)
# 创建一个列表，用于存储四个地图对象
map_list <- list()
# 循环绘制四个年份的地图并存储到列表中
for (year in c(2012, 2016, 2022)) {
# 选择特定年份的数据
data_year <- data_to_map[data_to_map$year == year, ]
# 合并数据和地图边界
data_map <- left_join(DBDQ2_sf, data_year, by = c("name_1" = "province"))
# 绘制地图
map <- tm_shape(data_map) +
tm_polygons(col = "fertility_rate",
style = "quantile",
n = 5,
palette = "Blues",
title = paste("Fertility Rate in", year),
legend.position = c("right", "bottom"),
textNA = "Missing Data",
border.col = "grey50") +
tm_layout(title.position = c("center", "top"))
print(as.data.frame(data_map[,c(117,119,120)]))
# 存储地图对象到列表中
map_list[[length(map_list) + 1]] <- map
}
# 创建地图对象
maps_combined <- tmap_arrange(map_list[[1]], map_list[[2]], map_list[[3]], nrow = 3, ncol = 1)
# 显示组合后的地图
maps_combined
DBDQ$province <- c("Xinjiang", "Tibet", "Qinghai", "Gansu", "Sichuan", "Chongqin", "Guizhou",
"Yunnan", "Ningxia", "Shaanxi", "Guangxi", "Hainan", "Guangdong", "Hunan", "Jiangxi",
"Fujian", "Taiwan", "Zhejiang", "Shanghai", "Hubei", "Anhui", "Jiangsu", "Henan", "Shandong",
"Hebei", "Shanxi","Mongolia", "Tianjin","Liaoning", "Jilin", "Heilongjiang",  "Beijing", "Hong Kong",
"Macao")
# 合并 final_data_wide 和 DBDQ
final_data_geo <- left_join(final_data_wide, DBDQ, by = c("province" = "province"))
final_data_geo <- final_data_geo[,c(1:15,18)]
# Create a data frame to store results
moran_results <- data.frame(year = c(2004:2019,2021:2022),
moran_I = numeric(18),
p_value = numeric(18),
z_value = numeric(18))
# Loop over each year and calculate Moran's I
for (i in 1:18) {
# Filter data for the specific year
data_year <- final_data_geo[final_data_geo$year == moran_results$year[i], ]
# Extract coordinates
coords <- st_coordinates(st_as_sf(data_year))
coords_df <- data.frame(X = coords[, 1], Y = coords[, 2])
coords_mat <- as.matrix(coords_df)
# Calculate k-nearest neighbor spatial weights
nb <- knn2nb(knearneigh(coords_mat, k = 15))
listw <- nb2listw(nb, style = "B", zero.policy = TRUE)
# Calculate Moran's I
moran_results$moran_I[i] <- moran(data_year$fertility_rate, listw, n = 31, S0=Szero(listw))$I
moran_mc <- moran.mc(data_year$fertility_rate, listw, nsim=999)
# Store p-value and Z-value
moran_results$p_value[i] <- moran_mc$p.value
moran_results$z_value[i] <- (moran_results$moran_I[i] - mean(moran_mc$res)) / sd(moran_mc$res)
}
# Print the result
print(moran_results)
ggplot(moran_results, aes(x = year, y = moran_I)) +
geom_line(color = "skyblue", size = 1) +
geom_point(shape = 17, size = 5, fill = "skyblue") +
labs(title = "
Moran's I Over Time Plot", x = "Year", y = "Moran's I")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
# File names and English names
file_names <- c("城乡居民社会养老保险参保人数占比.xls", "城镇登记失业率.xls", "地方财政支出.xls",
"地区生产总值.xlsx", "国家财政性教育经费.xls", "教育就业人数占比.xls",
"居民消费价格指数.xls", "每10万人口高等教育在校人数.xls",
"每万人拥有卫生技术人员.xls", "年末参加生育保险人数.xls",
"人均可支配收入.xls", "人均住宅销售额.xls", "生育率.xlsx")
english_names <- c("social_insurance_participation", "urban_unemployment_rate",
"local_fiscal_expenditure", "GDP", "national_education_funding",
"education_employment_rate", "CPI", "HE_students_per_100000",
"health_technicians_per_10000", "maternity_insurance_participation",
"per_capita_disposable_income", "per_capita_residential_sales",
"fertility_rate")
data_list <- lapply(file_names, function(file) {
# Read data
data <- read_excel(file,
range = cell_rows(4:35))
# Determine column names for pivot_longer()
col_names <- colnames(data)[-1]  # Exclude the first column
# Pivot the data to long format
data_long <- pivot_longer(data, cols = all_of(col_names), names_to = "year", values_to = "value")
# Extract year from year column
data_long$year <- gsub("年", "", data_long$year)
#Convert value to numeric
data_long$value <- as.numeric(data_long$value)
# Add file name as a column
data_long$file_name <- file
# Add English name as a column
data_long$english_name <- english_names[file_names == file]
# Return the modified data
return(data_long)
})
# Removes NULL elements from the list
data_list <- data_list[!sapply(data_list, is.null)]
# Bind all data frames together
final_data <- bind_rows(data_list)
# Print the first few rows of the final data frame
final_data$Region <- NULL
final_data$file_name <- NULL
# Pivot the data from long to wide format
final_data_wide <- pivot_wider(final_data, names_from = english_name, values_from = value)
kable(head(final_data_wide),caption = "clean data")
library(ggplot2)
library(tidyr)
library(readxl)
library(tidyverse)
library(dplyr)
library(patchwork)
library(pinyin)
library(sf)
library(tmap)
library(tmaptools)
library(gridExtra)
library(sp)
library(spdep)
library(sf)
library(spatialreg)
library(lmtest)
library(car)
library(knitr)
library(lmtest)
library(mice)
# File names and English names
file_names <- c("城乡居民社会养老保险参保人数占比.xls", "城镇登记失业率.xls", "地方财政支出.xls",
"地区生产总值.xlsx", "国家财政性教育经费.xls", "教育就业人数占比.xls",
"居民消费价格指数.xls", "每10万人口高等教育在校人数.xls",
"每万人拥有卫生技术人员.xls", "年末参加生育保险人数.xls",
"人均可支配收入.xls", "人均住宅销售额.xls", "生育率.xlsx")
english_names <- c("social_insurance_participation", "urban_unemployment_rate",
"local_fiscal_expenditure", "GDP", "national_education_funding",
"education_employment_rate", "CPI", "HE_students_per_100000",
"health_technicians_per_10000", "maternity_insurance_participation",
"per_capita_disposable_income", "per_capita_residential_sales",
"fertility_rate")
data_list <- lapply(file_names, function(file) {
# Read data
data <- read_excel(file,
range = cell_rows(4:35))
# Determine column names for pivot_longer()
col_names <- colnames(data)[-1]  # Exclude the first column
# Pivot the data to long format
data_long <- pivot_longer(data, cols = all_of(col_names), names_to = "year", values_to = "value")
# Extract year from year column
data_long$year <- gsub("年", "", data_long$year)
#Convert value to numeric
data_long$value <- as.numeric(data_long$value)
# Add file name as a column
data_long$file_name <- file
# Add English name as a column
data_long$english_name <- english_names[file_names == file]
# Return the modified data
return(data_long)
})
# Removes NULL elements from the list
data_list <- data_list[!sapply(data_list, is.null)]
# Bind all data frames together
final_data <- bind_rows(data_list)
# Print the first few rows of the final data frame
final_data$Region <- NULL
final_data$file_name <- NULL
# Pivot the data from long to wide format
final_data_wide <- pivot_wider(final_data, names_from = english_name, values_from = value)
kable(head(final_data_wide),caption = "clean data")
DBDQ2 <- st_read("省级行政区.shp")
DBDQ2$name_1 <- c("Heilongjiang", "Xinjiang", "Shanxi", "Ningxia", "Tibet", "Shandong",
"Henan", "Jiangsu", "Anhui", "Hubei", "Zhejiang", "Jiangxi", "Hunan",
"Yunnan", "Guizhou", "Fujian", "Guangxi", "Guangdong", "Hainan", "Jilin",
"Liaoning", "Tianjin", "Qinghai", "Gansu", "Shaanxi", "Mongolia", "Chongqin",
"Hebei", "Shanghai", "Beijing", "Taiwan", "Xianggang", "Aomen", "Sichuan")
average_fertility_rate <- aggregate(fertility_rate ~ year, data = final_data_wide, FUN = mean)
average_capita<- aggregate(per_capita_residential_sales ~ year, data = final_data_wide, FUN = mean)
Fertility_plot <- ggplot(average_capita, aes(x = year, y = per_capita_residential_sales)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 绘制柱状图
labs(
x = "Year",
y = "Average Fertility Rate",
title = "Average Fertility Rate Over Time"
) +
theme_minimal()  # 使用最小化的主题样式
Fertility_plot <- ggplot(average_fertility_rate, aes(x = year, y = fertility_rate)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 绘制柱状图
labs(
x = "Year",
y = "Average Fertility Rate",
title = "Average Fertility Rate Over Time"
) +
theme_minimal()  # 使用最小化的主题样式
Fertility_plot
# 计算每个城市的平均生育率
average_fertility_rate <- final_data_wide%>%
group_by(province) %>%
summarise(mean_fertility_rate = mean(fertility_rate, na.rm = TRUE)) %>%
arrange(mean_fertility_rate)
#柱状图
ggplot(average_fertility_rate, aes(x = reorder(province, mean_fertility_rate), y = mean_fertility_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Average Fertility Rate by Province",
x = "Province",
y = "Average Fertility Rate") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# 从 final_data_wide 中提取需要的数据
data_to_map <- final_data_wide[, c("province", "year", "fertility_rate")]
# 将地图数据（DBDQ2）转换为 sf 对象
DBDQ2_sf <- st_as_sf(DBDQ2)
# 创建一个列表，用于存储四个地图对象
map_list <- list()
# 循环绘制四个年份的地图并存储到列表中
for (year in c(2012, 2016, 2022)) {
# 选择特定年份的数据
data_year <- data_to_map[data_to_map$year == year, ]
# 合并数据和地图边界
data_map <- left_join(DBDQ2_sf, data_year, by = c("name_1" = "province"))
# 绘制地图
map <- tm_shape(data_map) +
tm_polygons(col = "fertility_rate",
style = "quantile",
n = 5,
palette = "Blues",
title = paste("Fertility Rate in", year),
legend.position = c("right", "bottom"),
textNA = "Missing Data",
border.col = "grey50") +
tm_layout(title.position = c("center", "top"))
# 存储地图对象到列表中
map_list[[length(map_list) + 1]] <- map
}
# 创建地图对象
maps_combined <- tmap_arrange(map_list[[1]], map_list[[2]], map_list[[3]], nrow = 3, ncol = 1)
# 显示组合后的地图
maps_combined
missing_values <- final_data_wide %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "missing_count")
# Plot a bar chart of the missing values count
ggplot(missing_values, aes(x = reorder(variable, missing_count), y = missing_count)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = missing_count), hjust = -0.3, size = 3.5) +
coord_flip() +
labs(title = "Number of Missing Values for Each Column",
x = "Variable",
y = "Missing Values Count") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
# 使用mice函数进行插补
imputed_data <- mice(final_data_wide, method = 'pmm', m = 5,printFlag = F)
final_data_imputed <- complete(imputed_data, action = 1)
# 显示插补后的数据框
kable(head(final_data_imputed),caption = "final data")
numeric_vars <- final_data_imputed %>% select(where(is.numeric)) %>% names()
#将数据转换为长格式
data_long <- final_data_imputed %>%
pivot_longer(cols = all_of(numeric_vars), names_to = "variable", values_to = "value")
#所有数值变量的直方图
ggplot(data_long, aes(x = value)) +
geom_histogram(fill = "steelblue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Histograms of All Numeric Variables",
x = "Value",
y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data_long, aes(x = value)) +
geom_histogram(fill = "steelblue") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Histograms of All Numeric Variables",
x = "Value",
y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
model0<-lm(fertility_rate~social_insurance_participation +
urban_unemployment_rate + local_fiscal_expenditure + GDP +
national_education_funding + education_employment_rate +
CPI + HE_students_per_100000 + health_technicians_per_10000 +
maternity_insurance_participation + per_capita_disposable_income +
per_capita_residential_sales,data=final_data_imputed)
model0_step<-step(model0)
summary(model0_step)
model1<-lm(fertility_rate~province + year + social_insurance_participation +
urban_unemployment_rate + local_fiscal_expenditure + GDP +
national_education_funding + education_employment_rate +
CPI + HE_students_per_100000 + health_technicians_per_10000 +
maternity_insurance_participation + per_capita_disposable_income +
per_capita_residential_sales,data=final_data_imputed)
model1_step<-step(model1)
summary(model1_step)
